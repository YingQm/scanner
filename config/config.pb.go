// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	// 扫描的IP地址，多个可用半角逗号","隔开，最多支持10个
	IpAddrs string `protobuf:"bytes,1,opt,name=ipAddrs" json:"ipAddrs,omitempty"`
	// 扫描的端口号，多个可用半角逗号","隔开，最多支持10个
	Ports string `protobuf:"bytes,2,opt,name=ports" json:"ports,omitempty"`
	// 扫描的间隔时间, 单位分钟，默认1分钟
	IntervalTime int64 `protobuf:"varint,3,opt,name=intervalTime" json:"intervalTime,omitempty"`
	// 发送者邮箱
	FromEmail string `protobuf:"bytes,4,opt,name=fromEmail" json:"fromEmail,omitempty"`
	// 发送者邮件的授权码，发送者邮箱需要开启"POP3/SMTP服务"，获取授权码
	FromEmailPsw string `protobuf:"bytes,5,opt,name=fromEmailPsw" json:"fromEmailPsw,omitempty"`
	// 接收者邮箱，多个可用半角逗号","隔开
	ToEmail   string `protobuf:"bytes,6,opt,name=toEmail" json:"toEmail,omitempty"`
	Host      string `protobuf:"bytes,7,opt,name=host" json:"host,omitempty"`
	PostEmail int32  `protobuf:"varint,8,opt,name=postEmail" json:"postEmail,omitempty"`
	// 如果需要发送的信息相同，间隔一段时间再发送，默认60，单位分钟
	SendTime             int64    `protobuf:"varint,9,opt,name=sendTime" json:"sendTime,omitempty"`
	IpPosts              []string `protobuf:"bytes,10,rep,name=ipPosts" json:"ipPosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_f04fe09eb661b080, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetIpAddrs() string {
	if m != nil {
		return m.IpAddrs
	}
	return ""
}

func (m *Config) GetPorts() string {
	if m != nil {
		return m.Ports
	}
	return ""
}

func (m *Config) GetIntervalTime() int64 {
	if m != nil {
		return m.IntervalTime
	}
	return 0
}

func (m *Config) GetFromEmail() string {
	if m != nil {
		return m.FromEmail
	}
	return ""
}

func (m *Config) GetFromEmailPsw() string {
	if m != nil {
		return m.FromEmailPsw
	}
	return ""
}

func (m *Config) GetToEmail() string {
	if m != nil {
		return m.ToEmail
	}
	return ""
}

func (m *Config) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Config) GetPostEmail() int32 {
	if m != nil {
		return m.PostEmail
	}
	return 0
}

func (m *Config) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *Config) GetIpPosts() []string {
	if m != nil {
		return m.IpPosts
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "config.Config")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_f04fe09eb661b080) }

var fileDescriptor_config_f04fe09eb661b080 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4e, 0xc3, 0x30,
	0x0c, 0x86, 0x95, 0x75, 0xcd, 0x56, 0x6b, 0x27, 0x8b, 0x83, 0x85, 0x38, 0x44, 0x3b, 0xf5, 0xc4,
	0x85, 0x27, 0x40, 0x88, 0xfb, 0x54, 0xf1, 0x02, 0x83, 0xb6, 0x10, 0xa9, 0xad, 0xa3, 0x38, 0x82,
	0xd7, 0xe1, 0x51, 0x51, 0x1d, 0xd6, 0xaa, 0x37, 0x7f, 0x9f, 0xec, 0xe4, 0xb7, 0xe1, 0xf4, 0xc1,
	0x53, 0xef, 0x3f, 0x1f, 0x43, 0xe4, 0xc4, 0x68, 0x33, 0x9d, 0x7f, 0x77, 0x60, 0x5f, 0xb4, 0x44,
	0x82, 0x83, 0x0f, 0xcf, 0x6d, 0x1b, 0x85, 0x8c, 0x33, 0x75, 0xd5, 0xdc, 0x10, 0xef, 0xa0, 0x0c,
	0x1c, 0x93, 0xd0, 0x4e, 0x7d, 0x06, 0x3c, 0xc3, 0xc9, 0x4f, 0xa9, 0x8b, 0xdf, 0xd7, 0xe1, 0xcd,
	0x8f, 0x1d, 0x15, 0xce, 0xd4, 0x45, 0xb3, 0x71, 0xf8, 0x00, 0x55, 0x1f, 0x79, 0x7c, 0x1d, 0xaf,
	0x7e, 0xa0, 0xbd, 0x4e, 0xaf, 0x62, 0x7e, 0x61, 0x81, 0x8b, 0xfc, 0x50, 0xa9, 0x0d, 0x1b, 0x37,
	0xa7, 0x4a, 0x9c, 0xe7, 0x6d, 0x4e, 0xf5, 0x8f, 0x88, 0xb0, 0xff, 0x62, 0x49, 0x74, 0x50, 0xad,
	0xf5, 0xfc, 0x5f, 0x60, 0x49, 0xb9, 0xff, 0xe8, 0x4c, 0x5d, 0x36, 0xab, 0xc0, 0x7b, 0x38, 0x4a,
	0x37, 0xb5, 0x9a, 0xb6, 0xd2, 0xb4, 0x0b, 0xe7, 0xed, 0x2f, 0x2c, 0x49, 0x08, 0x5c, 0x91, 0xb7,
	0x57, 0x7c, 0xb7, 0x7a, 0xb1, 0xa7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x51, 0x4e, 0x26, 0x56,
	0x41, 0x01, 0x00, 0x00,
}
